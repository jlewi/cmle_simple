# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from api import cmle_example_pb2 as api_dot_cmle__example__pb2


class CmleExampleStub(object):
  """The CmleExample service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Predict = channel.unary_unary(
        '/cmle.example.CmleExample/Predict',
        request_serializer=api_dot_cmle__example__pb2.PredictRequest.SerializeToString,
        response_deserializer=api_dot_cmle__example__pb2.PredictResponse.FromString,
        )


class CmleExampleServicer(object):
  """The CmleExample service definition.
  """

  def Predict(self, request, context):
    """Sends a prediction request
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CmleExampleServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Predict': grpc.unary_unary_rpc_method_handler(
          servicer.Predict,
          request_deserializer=api_dot_cmle__example__pb2.PredictRequest.FromString,
          response_serializer=api_dot_cmle__example__pb2.PredictResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'cmle.example.CmleExample', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
